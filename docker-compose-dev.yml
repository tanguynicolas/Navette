version: '3.9'
name: navette

services:
  postgresql:
    container_name: ${COMPOSE_PROJECT_NAME}-postgresql # not horizontally scalable
    image: postgres:16-alpine
    restart: always
    expose:
      - 5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10

  lb:
    image: tanguynicolas/navette-lb:latest
    pull_policy: always
    restart: unless-stopped
    ports:
      - 80:80
    environment:
      - BEARER_TOKEN=${BEARER_TOKEN}
    depends_on:
      - pgadmin
      - api
      - dozzle

  pgadmin:
    container_name: ${COMPOSE_PROJECT_NAME}-pgadmin # not horizontally scalable
    image: dpage/pgadmin4:8
    restart: unless-stopped
    expose:
      - 80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_DISABLE_POSTFIX=True
      - PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT=False
    volumes:
      - dba-data:/var/lib/pgadmin

  api:
    image: tanguynicolas/navette-api:latest
    pull_policy: always
    restart: unless-stopped
    expose:
      - 80
    environment:
      - DB_ENABLE_SQLITE=false
      - DB_HOSTNAME=postgresql
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE=navette
    depends_on:
      postgresql:
        condition: service_healthy

  dozzle:
    image: amir20/dozzle:latest
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  db-data:
  dba-data:
